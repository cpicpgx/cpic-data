name: Build project

on:
  push:
    branches:
      - "development"
      - "ci-test"

env:
  PGHOST: postgres
  PGPASSWORD: postgres
  CPIC_HOST: postgres
  CPIC_PASS: postgres

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    container:
      image: pgkb/base:latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # from https://github.com/actions/checkout/issues/760
      - name: work around permission issue
        run: git config --global --add safe.directory *

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Build and test
        run: ./gradlew test

      - name: Install yarn dependencies
        run: yarn install --immutable

      # checking out default branch, which should be staging!
      - name: Checkout cpic-support-files
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: cpicpgx/cpic-support-files
          path: './cpic-support-files'

      - name: Initialize dev env
        run: make db-init
